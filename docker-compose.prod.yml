# Production Docker Compose file for PickleTime. Pulls images from GitHub
# Container Registry and uses .env files from the backend and frontend directories.
services:
  frontend-extract:
    image: ghcr.io/pickle-time/pickletime-frontend:latest
    container_name: frontend
    env_file:
      - ../pickletime-frontend/.env
    volumes:
      # - frontend_build:/app/dist
      - frontend_build:/usr/share/nginx/html
    command: >
      sh -c "rm -rf /usr/share/nginx/html/* && cp -r /app/dist/* /usr/share/nginx/html"
    restart: "no"

  backend:
    image: ghcr.io/pickle-time/pickletime-backend:latest
    container_name: backend
    ports:
      - "5000:5000"
    env_file:
      - ../pickletime-backend/.env
    depends_on:
      - postgres
    command: [ "sh", "-c", "npx prisma migrate dev && npm run seed && npm run start" ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - frontend-extract
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "3"

  postgres:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - ../pickletime-backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "3"

volumes:
  frontend_build:
  postgres_data:

  # Run once and run command to generate the SSL certificate, then stop nginx and comment out nginx service
  # docker run --rm -v "$(pwd)/certbot/www:/var/www/certbot" -v "$(pwd)/certbot/conf:/etc/letsencrypt" certbot/certbot certonly --webroot --webroot-path=/var/www/certbot --email kristophervan1999@gmail.com --agree-tos --no-eff-email -d pickletime.duckdns.org
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./certbot/www:/var/www/certbot
  #     - ./certbot/conf:/etc/letsencrypt
  #   depends_on:
  #     - certbot
